# Environment Variables for Docker Compose

# ============================================
# REQUIRED: API Keys and Secrets
# ============================================

# Google Gemini API Key (Required)
# Get this from: https://ai.google.dev/
GEMINI_API_KEY=your_gemini_api_key_here

# JWT Secret for authentication (Required)
# Generate a secure random string
JWT_SECRET=your_secure_jwt_secret_here

# ============================================
# REQUIRED: AWS Configuration
# ============================================

# AWS S3 Configuration (Required for file storage)
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=your_aws_access_key_id
AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key
S3_BUCKET_NAME=your_s3_bucket_name

# ============================================
# OPTIONAL: Advanced Configuration
# ============================================

# S3 Configuration (Optional)
S3_CODE_PREFIX=code-artifacts
S3_PRESIGNED_URL_EXPIRES=3600

# Cache Configuration (Optional)
CACHE_TTL=300

# ============================================
# INSTRUCTIONS
# ============================================

# 1. Copy this file to .env:
#    cp docker.env.example .env

# 2. Fill in your actual values above

# 3. For Gemini API Key:
#    - Go to https://ai.google.dev/
#    - Create a new API key
#    - Replace 'your_gemini_api_key_here' with your actual key

# 4. For JWT Secret:
#    - Generate a secure random string (at least 32 characters)
#    - You can use: openssl rand -base64 32

# 5. For AWS Configuration:
#    - Create an AWS account if you don't have one
#    - Create an S3 bucket
#    - Create IAM credentials with S3 access
#    - Replace the placeholder values

# 6. Start the application:
#    docker-compose up -d